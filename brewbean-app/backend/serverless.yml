org: candicecodes
app: brewbean

# service: ${file(./secrets.json):ApiName}
service: serverless-graphql-rds

provider:
  name: aws
  region: ca-central-1
  stage: dev
  memorySize: 256
  runtime: nodejs12.x
  # role: LambdaRole
  iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "secretsmanager:GetSecretValue"
        Resource: "arn:aws:secretsmanager:ca-central-1:817666344894:secret:database-1-masterpassword-wBwMj9"
  # environment:
    #mysql
    # MYSQL_HOST: ${file(./secrets.json):DatabaseHost}
    # MYSQL_PORT: ${file(./secrets.json):DatabasePort}
    #common
    # DB_NAME: ${file(./secrets.json):DatabaseName}
    # USERNAME: ${self:custom.USERNAME}
    # PASSWORD: ${self:custom.PASSWORD}
    # SERVERLESS_ACCESS: ${file(./secrets.json):AccessKey}
# custom:
  # SECRETS: 
  # DB_NAME: ${file(./secrets.json):DatabaseName}
  # USERNAME: master
  # PASSWORD: password
  # MYSQL:
    # HOST:
      # Fn::GetAtt: [MySqlRDSInstance, Endpoint.Address]
      # Fn::GetAtt: [${file(./resource/MySqlRDSInstance.yml)}, Endpoint.Address]
    # PORT:
      # Fn::GetAtt: [MySqlRDSInstance, Endpoint.Port]

plugins:
  - serverless-pseudo-parameters
  - serverless-offline
# resources:
#   Resources:
#     LambdaRole: ${file(./resource/LambdaRole.yml)}
#     ServerlessInternetGateway: ${file(./resource/ServerlessInternetGateway.yml)}
#     ServerlessVPC: ${file(./resource/ServerlessVPC.yml)}
#     ServerlessVPCGA: ${file(./resource/ServerlessVPCGA.yml)}
#     ServerlessSubnetA: ${file(./resource/ServerlessSubnetA.yml)}
#     ServerlessSubnetB: ${file(./resource/ServerlessSubnetB.yml)}
#     ServerlessSubnetC: ${file(./resource/ServerlessSubnetC.yml)}
#     ServerlessSubnetGroup: ${file(./resource/ServerlessSubnetGroup.yml)}
#     ServerlessSecurityGroup: ${file(./resource/ServerlessSecurityGroup.yml)}
#     RouteTablePublic: ${file(./resource/RouteTablePublic.yml)}
#     RoutePublic: ${file(./resource/RoutePublic.yml)}
#     RouteTableAssociationSubnetA: ${file(./resource/RouteTableAssociationSubnetA.yml)}
#     RouteTableAssociationSubnetB: ${file(./resource/RouteTableAssociationSubnetB.yml)}
#     RouteTableAssociationSubnetC: ${file(./resource/RouteTableAssociationSubnetC.yml)}
    # MySqlRDSInstance: ${file(./resource/MySqlRDSInstance.yml)}

    
functions:

  graphql:
    handler: handler.server
    events:
      - http:
          path: /
          method: post
          cors: true
  playground:
    handler: handler.playground
    events:
      - http:
          path: /
          method: get
          cors: true